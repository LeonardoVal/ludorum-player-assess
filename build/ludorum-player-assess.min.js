//! ludorum-player-assess 0.0.1

(function(e){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],e):"object"==typeof exports&&module.exports?module.exports=e(require("creatartis-base"),require("sermat"),require("ludorum")):this["ludorum-player-assess"]=e(this.base,this.Sermat,this.ludorum)}).call(this,function e(r,a,n){"use strict";var t=r.raiseIf,o={__package__:"ludorum-player-assess",__name__:"ludorum_player_assess",__init__:e,__dependencies__:[r,a],ludorum:n,__SERMAT__:{include:[r,n]},compare:function(e,a,t,o,s){t=t||new n.players.RandomPlayer({name:"RandomPlayer"}),o=o||[new n.players.RandomPlayer({name:"RandomOpponent"})],s=+s||400;var u=new n.tournaments.Measurement(e,a,o,s),i=new n.tournaments.Measurement(e,t,o,s);return r.Future.all([u.run(),i.run()]).then(function(){var r={};return e.players.forEach(function(e){var n=u.statistics,o=i.statistics;(r[a.name]||(r[a.name]={}))[e]=[n.count({key:"victories",role:e,player:a.name}),n.count({key:"draws",role:e,player:a.name}),n.count({key:"defeats",role:e,player:a.name})],(r[t.name]||(r[t.name]={}))[e]=[o.count({key:"victories",role:e,player:t.name}),o.count({key:"draws",role:e,player:t.name}),o.count({key:"defeats",role:e,player:t.name})]}),r})}},s=o.hypergeometricRule=function(e,r){var a=0,n=[0,0],t=e.map(function(e,t){return n[0]+=e,n[1]+=r[t],a+=e+r[t],e+r[t]}),o=new Array(a+1);n.concat(t).forEach(function(e){for(var r=2;r<=e;r++)o[r]=1+(0|o[r])}),[a].concat(e,r).forEach(function(e){for(var r=2;r<=e;r++)o[r]=(0|o[r])-1});for(var s=1,u=2,i=2;u<=a||i<=a;)s<=1&&u<=a?(o[u]>0&&(s*=Math.pow(u,o[u])),u++):(o[i]<0&&(s*=Math.pow(i,o[i])),i++);return s};return o.fisher2x2=function(e,r,a){t(2!==e.length||2!==r.length,"Contingency table should be 2x2!"),a=isNaN(a)?.05:+a;var n=e[0],o=e[1],u=r[0],i=r[1],c=n+o,l=u+i,m=n+u,p=o+i,f=Math.abs(n/c-u/l),y=Math.max(m,p),d=0;for(n=0;n<=y;n++)u=m-n,i=p-(o=c-n),Math.abs(n/c-u/l)>=f&&(d+=s([n,o],[u,i]));return{p_value:d,comparison:d>a?0:e[0]-r[0]}},o});
//# sourceMappingURL=ludorum-player-assess.min.js.map