//! ludorum-player-assess 0.0.1

(function(e){"use strict";this["ludorum-player-assess"]=e(this.base,this.Sermat,this.ludorum)}).call(this,function e(t,n,a){"use strict";var r=t.raiseIf,i=t.declare,o=t.initialize,u=t.iterable,s=t.Iterable,c=t.Randomness,l=t.Future,m=t.Statistics,f={__package__:"ludorum-player-assess",__name__:"ludorum_player_assess",__init__:e,__dependencies__:[t,n],ludorum:a,__SERMAT__:{include:[t,a]}},h=f.statistics={};f.compare=function(e){r(!e||!e.game,"Missing `game` argument!");var n,i=e.game,o=e.players||[new a.players.RandomPlayer({name:"RandomPlayer"})],u=e.opponents||[new a.players.RandomPlayer({name:"RandomOpponent"})],s=+e.matchCount||400,c=e.logger,l=o.map(function(e){return new a.tournaments.Measurement(i,e,u,s)});if(c){c.info("Starting "+s*o.length*2+" matches of "+i.name+".");var m=0;l.forEach(function(e){e.events.on("afterMatch",function(){m++})}),n=setInterval(function(){c.info("Played "+m+"/"+s*o.length*2+" matches.")},e.logTime||2e4)}return t.Future.all(l.map(function(e){return e.run()})).then(function(){return l.map(function(e,n){var a=e.statistics,r=o[n],u=t.iterable(i.players).map(function(e){return[e,[a.count({key:"victories",role:e,player:r.name}),a.count({key:"draws",role:e,player:r.name}),a.count({key:"defeats",role:e,player:r.name})]]}).toObject();return u.player=r.name,u})}).then(function(e){return c&&(clearInterval(n),c.info("Played "+m+"/"+s*o.length*2+" matches.")),e})};var d=h.hypergeometricRule=function(e,t){var n=0,a=[0,0],r=e.map(function(e,r){return a[0]+=e,a[1]+=t[r],n+=e+t[r],e+t[r]}),i=new Array(n+1);a.concat(r).forEach(function(e){for(var t=2;t<=e;t++)i[t]=1+(0|i[t])}),[n].concat(e,t).forEach(function(e){for(var t=2;t<=e;t++)i[t]=(0|i[t])-1});for(var o=1,u=2,s=2;u<=n||s<=n;)o<=1&&u<=n?(i[u]>0&&(o*=Math.pow(u,i[u])),u++):(i[s]<0&&(o*=Math.pow(s,i[s])),s++);return o};return h.fisher2x2=function(e,t,n){r(2!==e.length||2!==t.length,"Contingency table should be 2x2!"),n=isNaN(n)?.05:+n;var a=e[0],i=e[1],o=t[0],u=t[1],s=a+i,c=o+u,l=a+o,m=Math.abs(a/s-o/c),f=Math.min(s,l),h=0;for(a=0;a<=f;a++)i=s-a,(u=c-(o=l-a))>=0&&Math.abs(a/s-o/c)>=m&&(h+=d([a,i],[o,u]));return{p_value:h,comparison:h>n?0:e[0]-t[0]}},h.fisher2x3=function(e,t,n){r(3!==e.length||3!==t.length,"Contingency table should be 2x3!"),n=isNaN(n)?.05:+n;var a,i,o=e[0],u=e[1],s=e[2],c=t[0],l=t[1],m=t[2],f=o+u+s,h=o+c,p=u+l,y=s+m,g=d([o,u,s],[c,l,m]),_=Math.min(f,h),v=0;for(o=0;o<=_;o++)for(i=Math.min(f-o,p),u=0;u<=i;u++)c=h-o,l=p-u,(m=y-(s=f-o-u))>=0&&(a=d([o,u,s],[c,l,m]))<=g&&(v+=a);return{p_value:v,comparison:v>n?0:e[0]-t[0]||(e[1]-row[1])/(p+1)}},f.Scanner=i({constructor:function(e){o(this,e).object("game",{ignore:!0}).integer("maxWidth",{defaultValue:1e3,coerce:!0}).integer("maxLength",{defaultValue:50,coerce:!0}).object("random",{defaultValue:c.DEFAULT}).object("statistics",{defaultValue:new m}).bool("adjustWidth",{defaultValue:!1,coerce:!0})},scan:function(e){var t=this,n=arguments.length<2?this.game?[this.game]:[]:Array.prototype.slice.call(arguments,1),a=0;return this.__currentWidth__=this.maxLength,l.whileDo(function(){return n.length>0&&a<t.__currentWidth__},function(){return l.all(n.map(function(n){return t.__advance__(e,n,a)})).then(function(e){return n=u(e).filter(function(e){var n=e.isEmpty();return n&&t.adjustWidth&&t.__currentWidth__--,!n}).flatten().sample(t.__currentWidth__,t.random).toArray(),++a})}).then(function(){return t.statistics.add({key:"aborted"},n.length),t.statistics})},scans:function(){return l.sequence(Array.prototype.slice.call(arguments),this.scan.bind(this))},__advance__:function(e,t,n){if(t.isContingent)return u(t.possibleHaps()).mapApply(function(e,n){return t.next(e)});if(this.account(e,t,n))return s.EMPTY;var a=t.moves(),r=this.statistics;return l.all(t.activePlayers.map(function(n){if(e&&e[n]){var i=e[n],o=r.stat({key:"decision.time",game:t.name,role:n,player:i.name});return o.startTime(),l.when(i.decision(t,n)).then(function(e){return o.addTime(),[[n,e]]})}return a[n].map(function(e){return[n,e]})})).then(function(e){return s.product.apply(s,e).map(function(e){return t.next(u(e).toObject())})})},account:function(e,t,n){var a=t.result(),r=this.statistics;if(a)return u(t.players).forEach(function(i){var o=a[i],u=e&&e[i]?e[i].name:"";r.add({key:"game.result",game:t.name,role:i,player:u},o,t),r.add({key:"game.length",game:t.name,role:i,player:u},n,t),o<0?(r.add({key:"defeat.result",game:t.name,role:i,player:u},o,t),r.add({key:"defeat.length",game:t.name,role:i,player:u},n,t)):o>0?(r.add({key:"victory.result",game:t.name,role:i,player:u},o,t),r.add({key:"victory.length",game:t.name,role:i,player:u},n,t)):r.add({key:"draw.length",game:t.name,role:i,player:u},n,t)}),!0;var i=t.moves();return u(t.activePlayers).forEach(function(e){r.add({key:"game.width",game:t.name,role:e},i[e].length)}),!1},"static scan":function(e){return new this(e).scan(e.players)}}),f});
//# sourceMappingURL=ludorum-player-assess-tag.min.js.map