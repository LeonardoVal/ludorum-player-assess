//! ludorum-player-assess 0.0.1

(function(e){"use strict";this["ludorum-player-assess"]=e(this.base,this.Sermat,this.ludorum)}).call(this,function e(n,a,r){"use strict";var t=n.raiseIf,o={__package__:"ludorum-player-assess",__name__:"ludorum_player_assess",__init__:e,__dependencies__:[n,a],ludorum:r,__SERMAT__:{include:[n,r]},compare:function(e){t(!e||!e.game,"Missing `game` argument!");var a,o=e.game,s=e.player1||new r.players.RandomPlayer({name:"RandomPlayer1"}),u=e.player2||new r.players.RandomPlayer({name:"RandomPlayer2"}),i=e.opponents||[new r.players.RandomPlayer({name:"RandomOpponent"})],l=+e.matchCount||400,c=e.logger,m=new r.tournaments.Measurement(o,s,i,l),f=new r.tournaments.Measurement(o,u,i,l);if(c){c.info("Starting "+4*l+" matches of "+o.name+".");var h=0;[m,f].forEach(function(e){e.events.on("afterMatch",function(){h++})}),a=setInterval(function(){c.info("Played "+h+"/"+4*l+" matches.")},e.logTime||2e4)}return n.Future.all([m.run(),f.run()]).then(function(){var e={};return o.players.forEach(function(n){var a=m.statistics,r=f.statistics;(e[s.name]||(e[s.name]={}))[n]=[a.count({key:"victories",role:n,player:s.name}),a.count({key:"draws",role:n,player:s.name}),a.count({key:"defeats",role:n,player:s.name})],(e[u.name]||(e[u.name]={}))[n]=[r.count({key:"victories",role:n,player:u.name}),r.count({key:"draws",role:n,player:u.name}),r.count({key:"defeats",role:n,player:u.name})]}),e}).then(function(e){return c&&(clearInterval(a),c.info("Played "+h+"/"+l+" matches.")),e})}},s=o.hypergeometricRule=function(e,n){var a=0,r=[0,0],t=e.map(function(e,t){return r[0]+=e,r[1]+=n[t],a+=e+n[t],e+n[t]}),o=new Array(a+1);r.concat(t).forEach(function(e){for(var n=2;n<=e;n++)o[n]=1+(0|o[n])}),[a].concat(e,n).forEach(function(e){for(var n=2;n<=e;n++)o[n]=(0|o[n])-1});for(var s=1,u=2,i=2;u<=a||i<=a;)s<=1&&u<=a?(o[u]>0&&(s*=Math.pow(u,o[u])),u++):(o[i]<0&&(s*=Math.pow(i,o[i])),i++);return s};return o.fisher2x2=function(e,n,a){t(2!==e.length||2!==n.length,"Contingency table should be 2x2!"),a=isNaN(a)?.05:+a;var r=e[0],o=e[1],u=n[0],i=n[1],l=r+o,c=u+i,m=r+u,f=Math.abs(r/l-u/c),h=Math.min(l,m),y=0;for(r=0;r<=h;r++)o=l-r,(i=c-(u=m-r))>=0&&Math.abs(r/l-u/c)>=f&&(y+=s([r,o],[u,i]));return{p_value:y,comparison:y>a?0:e[0]-n[0]}},o.fisher2x3=function(e,n,a){t(3!==e.length||3!==n.length,"Contingency table should be 2x3!"),a=isNaN(a)?.05:+a;var r,o,u=e[0],i=e[1],l=e[2],c=n[0],m=n[1],f=n[2],h=u+i+l,y=u+c,p=i+m,_=l+f,d=s([u,i,l],[c,m,f]),v=Math.min(h,y),g=0;for(u=0;u<=v;u++)for(o=Math.min(h-u,p),i=0;i<=o;i++)c=y-u,m=p-i,(f=_-(l=h-u-i))>=0&&(r=s([u,i,l],[c,m,f]))<=d&&(g+=r);return{p_value:g,comparison:g>a?0:e[0]-n[0]||(e[1]-row[1])/(p+1)}},o});
//# sourceMappingURL=ludorum-player-assess-tag.min.js.map